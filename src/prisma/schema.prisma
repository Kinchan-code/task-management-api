// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

enum ProjectPriority {
  low
  medium
  high
}

enum TaskPriority {
  low
  medium
  high
}

enum TaskStatus {
  pending
  in_progress
  completed
}

enum ProjectStatus {
  pending
  in_progress
  completed
}


model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String @unique
  password  String
  projects  Project[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  authorId  String @db.ObjectId
  author    User   @relation(fields: [authorId], references: [id])
  name      String
  description String?
  dueDate     DateTime?
  progress    Int
  status      ProjectStatus
  priority    ProjectPriority
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
}

model Task {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  projectId String @db.ObjectId
  project   Project @relation(fields: [projectId], references: [id])
  name      String
  description String?
  dueDate   DateTime?
  status    TaskStatus
  priority  TaskPriority
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model RefreshToken {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime
}